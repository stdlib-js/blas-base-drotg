{
  "version": 3,
  "sources": ["../lib/assign.js", "../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar abs = require( '@stdlib/math-base-special-abs' );\nvar sqrt = require( '@stdlib/math-base-special-sqrt' );\nvar abs2 = require( '@stdlib/math-base-special-abs2' );\nvar copysign = require( '@stdlib/math-base-special-copysign' );\n\n\n// MAIN //\n\n/**\n* Constructs a Givens plane rotation.\n*\n* @param {number} a - rotational elimination parameter\n* @param {number} b - rotational elimination parameter\n* @param {Float64Array} out - output array\n* @param {integer} stride - index increment\n* @param {NonNegativeInteger} offset - starting index\n* @returns {Float64Array} output array\n*\n* @example\n* var Float64Array = require( '@stdlib/array-float64' );\n*\n* var out = drotg( 0.0, 2.0, new Float64Array( 4 ), 1, 0 );\n* // returns <Float64Array>[ 2.0, 1.0, 0.0, 1.0 ]\n*/\nfunction drotg( a, b, out, stride, offset ) {\n\tvar scale;\n\tvar sign;\n\tvar aa;\n\tvar ab;\n\tvar r;\n\tvar c;\n\tvar s;\n\tvar z;\n\n\taa = abs( a );\n\tab = abs( b );\n\tif ( aa > ab ) {\n\t\tsign = copysign( 1.0, a );\n\t} else {\n\t\tsign = copysign( 1.0, b );\n\t}\n\tscale = aa + ab;\n\tif ( scale === 0.0 ) {\n\t\tc = 1.0;\n\t\ts = 0.0;\n\t\tr = 0.0;\n\t\tz = 0.0;\n\t} else {\n\t\tr = scale * sqrt( abs2( a/scale ) + abs2( b/scale ) );\n\t\tr *= sign;\n\t\tc = a / r;\n\t\ts = b / r;\n\t\tz = 1.0;\n\t\tif ( aa > ab ) {\n\t\t\tz = s;\n\t\t} else if ( c !== 0.0 ) {\n\t\t\tz = 1.0 / c;\n\t\t}\n\t}\n\ta = r;\n\tb = z;\n\tout[ offset ] = a;\n\tout[ offset + stride ] = b;\n\tout[ offset + ( 2 * stride ) ] = c;\n\tout[ offset + ( 3 * stride ) ] = s;\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = drotg;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Float64Array = require( '@stdlib/array-float64' );\nvar fcn = require( './assign.js' );\n\n\n// MAIN //\n\n/**\n* Constructs a Givens plane rotation.\n*\n* @param {number} a - rotational elimination parameter\n* @param {number} b - rotational elimination parameter\n* @returns {Float64Array} output array\n*\n* @example\n* var out = drotg( 0.0, 2.0 );\n* // returns <Float64Array>[ 2.0, 1.0, 0.0, 1.0 ]\n*/\nfunction drotg( a, b ) {\n\tvar out = new Float64Array( 4 );\n\treturn fcn( a, b, out, 1, 0 );\n}\n\n\n// EXPORTS //\n\nmodule.exports = drotg;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Construct a Givens plane rotation.\n*\n* @module @stdlib/blas-base-drotg\n*\n* @example\n* var drotg = require( '@stdlib/blas-base-drotg' );\n*\n* var out = drotg( 0.0, 2.0 );\n* // returns <Float64Array>[ 2.0, 1.0, 0.0, 1.0 ]\n*\n* out = drotg( 6.0, -8.0 );\n* // returns <Float64Array>[ 10.0, ~-1.666, -0.6, 0.8 ]\n*\n* @example\n* var Float64Array = require( '@stdlib/array-float64' );\n* var drotg = require( '@stdlib/blas-base-drotg' );\n*\n* var out = new Float64Array( 4 );\n*\n* var y = drotg.assign( 0.0, 2.0, out, 1, 0 );\n* // returns <Float64Array>[ 2.0, 1.0, 0.0, 1.0 ]\n*\n* var bool = ( y === out );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils-define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\nvar assign = require( './assign.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'assign', assign );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n\n// exports: { \"assign\": \"main.assign\" }\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAM,QAAS,+BAAgC,EAC/CC,EAAO,QAAS,gCAAiC,EACjDC,EAAO,QAAS,gCAAiC,EACjDC,EAAW,QAAS,oCAAqC,EAqB7D,SAASC,EAAOC,EAAGC,EAAGC,EAAKC,EAAQC,EAAS,CAC3C,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAEJ,OAAAL,EAAKZ,EAAKK,CAAE,EACZQ,EAAKb,EAAKM,CAAE,EACPM,EAAKC,EACTF,EAAOR,EAAU,EAAKE,CAAE,EAExBM,EAAOR,EAAU,EAAKG,CAAE,EAEzBI,EAAQE,EAAKC,EACRH,IAAU,GACdK,EAAI,EACJC,EAAI,EACJF,EAAI,EACJG,EAAI,IAEJH,EAAIJ,EAAQT,EAAMC,EAAMG,EAAEK,CAAM,EAAIR,EAAMI,EAAEI,CAAM,CAAE,EACpDI,GAAKH,EACLI,EAAIV,EAAIS,EACRE,EAAIV,EAAIQ,EACRG,EAAI,EACCL,EAAKC,EACTI,EAAID,EACOD,IAAM,IACjBE,EAAI,EAAMF,IAGZV,EAAIS,EACJR,EAAIW,EACJV,EAAKE,CAAO,EAAIJ,EAChBE,EAAKE,EAASD,CAAO,EAAIF,EACzBC,EAAKE,EAAW,EAAID,CAAS,EAAIO,EACjCR,EAAKE,EAAW,EAAID,CAAS,EAAIQ,EAC1BT,CACR,CAKAR,EAAO,QAAUK,IC7FjB,IAAAc,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAe,QAAS,uBAAwB,EAChDC,EAAM,IAgBV,SAASC,EAAOC,EAAGC,EAAI,CACtB,IAAIC,EAAM,IAAIL,EAAc,CAAE,EAC9B,OAAOC,EAAKE,EAAGC,EAAGC,EAAK,EAAG,CAAE,CAC7B,CAKAN,EAAO,QAAUG,ICEjB,IAAII,EAAc,QAAS,uDAAwD,EAC/EC,EAAO,IACPC,EAAS,IAKbF,EAAaC,EAAM,SAAUC,CAAO,EAKpC,OAAO,QAAUD",
  "names": ["require_assign", "__commonJSMin", "exports", "module", "abs", "sqrt", "abs2", "copysign", "drotg", "a", "b", "out", "stride", "offset", "scale", "sign", "aa", "ab", "r", "c", "s", "z", "require_main", "__commonJSMin", "exports", "module", "Float64Array", "fcn", "drotg", "a", "b", "out", "setReadOnly", "main", "assign"]
}
